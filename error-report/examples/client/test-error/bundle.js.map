{"version":3,"sources":["webpack:///webpack/bootstrap","webpack:///../index.js","webpack:///../libs/util.js","webpack:///./client/test-error/index.js"],"names":["errorHandler","ErrorReport","supportType","project","collectAddress","sourceMapAddress","enableCatchError","console","log","a"],"mappings":";AAAA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;;;AAGA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA,kDAA0C,gCAAgC;AAC1E;AACA;;AAEA;AACA;AACA;AACA,gEAAwD,kBAAkB;AAC1E;AACA,yDAAiD,cAAc;AAC/D;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iDAAyC,iCAAiC;AAC1E,wHAAgH,mBAAmB,EAAE;AACrI;AACA;;AAEA;AACA;AACA;AACA,mCAA2B,0BAA0B,EAAE;AACvD,yCAAiC,eAAe;AAChD;AACA;AACA;;AAEA;AACA,8DAAsD,+DAA+D;;AAErH;AACA;;;AAGA;AACA;;;;;;;;;;;;;AClFA;AAAA;AAAA;AACA;AACA;AACA;;AAEkC;;AAElC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA,oBAAoB,OAAO;AAC3B,wBAAwB,aAAa;AACrC,kBAAkB;AAClB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB,kEAAkE;AACnF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA,wBAAwB,OAAO;AAC/B;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA;AACA,QAAQ,qDAAI;AACZ;AACA,SAAS;AACT;AACA;;AAEe,0EAAW,EAAC;;;;;;;;;;;;;ACzI3B;AAAA;AACe;AACf;AACA;AACA,eAAe,OAAO;AACtB,eAAe,OAAO;AACtB,eAAe,SAAS;AACxB,eAAe,SAAS;AACxB,eAAe,OAAO;AACtB,gBAAgB,QAAQ;AACxB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,wBAAwB,mCAAmC;AAC3D;AACA,CAAC;;;;;;;;;;;;;AC9CD;AAAA;AAAA;;AAEA,IAAIA,eAAe,IAAIC,iDAAJ,CAAgB;AAC/BC,iBAAa,QADkB;AAE/BC,aAAS,MAFsB;AAG/BC,oBAAgB,4CAHe;AAI/BC,sBAAkB;AAJa,CAAhB,CAAnB;AAMAL,aAAaM,gBAAb;;AAEAC,QAAQC,GAAR,CAAYC,CAAZ,E","file":"bundle.js","sourcesContent":[" \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = \"./client/test-error/index.js\");\n","/**\n * @file 错误异常收集\n *\n */\n\nimport util from './libs/util.js';\n\n/**\n * 错误上报类\n *\n * @class\n */\nclass ErrorReport {\n    /**\n     * ErrorReport构造函数\n     * @param options\n     * @required options.collectAddress 日志收集后端接口地址\n     */\n    constructor(options) {\n        // 注册一个error的缓存，重复的错误无需重复提交\n        this.errorCache = {};\n        // 项目或产品线\n        this.project = options.project || 'collection';\n        // 日志收集后端接口地址\n        this.collectAddress = options.collectAddress || 'http://localhost:8080/middleware/errorMsg/';\n        // sourceMap的存放地址\n        this.sourceMapAddress = options.sourceMapAddress || '';\n        // 错误信息收集类型（window, vue, react）\n        this.supportType = options.supportType || 'window';\n        this.supportIns = options.supportIns || window;\n    }\n\n    /**\n     * 开启获取error信息\n     */\n    enableCatchError() {\n        let self = this;\n        // 默认采用window.onerror来捕获error信息\n        window.onerror = function () {\n            self.sendErrorInfo(self.formatError('window', arguments));\n        };\n        // 捕获vue项目中的error信息\n        if (self.supportType === 'vue') {\n            self.supportIns.config.errorHandler = function (error) {\n                self.sendErrorInfo(self.formatError('vue', error));\n            };\n        }\n    }\n\n    /**\n     * 关闭获取error信息\n     */\n    disableCatchError() {\n        window.onerror = function () {};\n        if (self.supportType === 'vue') {\n            self.supportIns.config.errorHandler = function () {};\n        }\n\n    }\n\n    /**\n     * 格式化error信息\n     * @param type {string} 错误捕获类型['window', 'vue']\n     * @param errorObj {Object|Array} 错误信息\n     * @returns {{message: string, script: string, lineNo: string, columnNo: string, stack: string, project: (*|string)}}\n     */\n    formatError(type, errorObj) {\n        let self = this;\n        // 标准输出错误信息的格式\n        let formatError = {\n            message: '',\n            script: '',\n            lineNo: '',\n            columnNo: '',\n            stack: '',\n            project: self.project\n        };\n        // window.onerror类型错误处理\n        if (type === 'window') {\n            let [message, script, lineNo, columnNo, error] = errorObj;\n            formatError.message = message || '';\n            formatError.script = script || '';\n            formatError.lineNo = lineNo || '';\n            formatError.columnNo = columnNo || '';\n            formatError.stack = error && error.stack ? error.stack : '';\n        }\n        // vue.config.errorHandler类型错误处理\n        if (type === 'vue') {\n            let {line: lineNo, column: columnNo, sourceURL: script, message, stack} = errorObj;\n            // 如果vue不能正常解析error，则解析stack\n            if (!(script && lineNo)) {\n                // 利用正则，筛出scriptURI, lineNo, columnNo\n                // todo 正则或许与浏览器有关系\n                let regResult = /\\(([^\\(\\)]*)\\)/.exec(stack);\n                if (regResult[0] && regResult[1]) {\n                    let results = regResult[1].split(':');\n                    let length = results.length;\n                    lineNo = results[length - 2] || null;\n                    columnNo = results[length - 1] || null;\n\n                    let index = regResult[1].indexOf(':' + lineNo);\n                    if (index > -1) {\n                        script = regResult[1].substring(0, index);\n                    }\n                }\n            }\n            formatError.message = message || '';\n            formatError.script = script || '';\n            formatError.lineNo = lineNo || '';\n            formatError.columnNo = columnNo || '';\n            formatError.stack = stack || '';\n        }\n        return formatError;\n    }\n\n    /**\n     * 上报错误信息\n     * @param errorObj {Object} 错误信息\n     */\n    sendErrorInfo(errorObj) {\n        let url = this.collectAddress;\n        // 可以考虑将errObj整体做为一个json串传递到后端，以便做扩展\n        // 读取errorCache，进行重复消息过滤; key值为message + script + lineNo + columnNo\n        let key = (errorObj.message + errorObj.script + errorObj.lineNo + errorObj.columnNo).trim().replace(/\\s/g, '');\n        if (key in this.errorCache) {\n            return;\n        } else {\n            this.errorCache[key] = 1;\n        }\n        // 上传时携带上sourceMap文件的地址\n        errorObj.sourceMapAddress= this.sourceMapAddress;\n        util.jsonp(url, errorObj, function (data) {\n            console.log('error message has been send to server successfully');\n        })\n    }\n}\n\nexport default ErrorReport;\n","window.jsonpcb = {};\nexport default {\n    /**\n     * jsonp请求\n     * @param {string} url 请求url\n     * @param {Object} data 请求参数\n     * @param {Function} successCb 回调函数\n     * @param {Function} failCb 回调函数\n     * @param {string} cbParamType url中回调函数参数名，默认为【callback】\n     * @return {boolean} false\n     */\n    jsonp: function (url, data, successCb, failCb, cbParamType) {\n        let md5 = Math.ceil(Math.random() * 100000);\n        let cbn = 'jsonpcb' + md5;\n        cbParamType = cbParamType || 'callback';\n        url = url + (url.indexOf('?') > -1 ? '&' : '?') + cbParamType + '=window.jsonpcb.' + cbn;\n        data.ctime = new Date().getTime();\n        for (let key in data) {\n            // 需要对stack中的内容进行encodeURIComponent处理，避免由于stack中的特殊字符导致http请求被blocked\n            if (key === 'stack' && data[key]) {\n                data[key] = encodeURIComponent(data[key]);\n            }\n            if (typeof data[key] === 'object') {\n                url += '&' + key + '=' + JSON.stringify(data[key]);\n            }\n            else {\n                url += '&' + key + '=' + data[key];\n            }\n        }\n        let script = document.createElement('script');\n        window.jsonpcb[cbn] = (response)=> {\n            script.parentNode.removeChild(script);\n            successCb && successCb(response);\n            window.jsonpcb[cbn] = null;\n        };\n        script.onerror = ()=> {\n            script.parentNode.removeChild(script);\n            failCb && failCb();\n            window.jsonpcb[cbn] = null;\n        };\n        // console.log(url);\n        script.type = 'text/javascript';\n        script.src = url;\n        // 请求2s延缓发出，尽量在页面加载的时候，不占用资源\n        setTimeout(()=>{document.body.appendChild(script);}, 2000);\n    }\n}\n","import ErrorReport from '../../../index.js';\n\nlet errorHandler = new ErrorReport({\n    supportType: 'window',\n    project: 'test',\n    collectAddress: 'http://localhost:8585/middleware/errorMsg/',\n    sourceMapAddress: 'http://localhost:8585/client/test-error/'\n});\nerrorHandler.enableCatchError();\n\nconsole.log(a);\n"],"sourceRoot":""}